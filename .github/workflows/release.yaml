name: "release"

on:
  push:
    branches:
      - "release"

jobs:
  release:
    runs-on: "ubuntu-latest"
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      matrix:
        java: ['16']
    name: "Release"

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK {{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
          cache: maven

      - name: Install MiniZinc
        run: |
            wget https://github.com/MiniZinc/MiniZincIDE/releases/download/2.3.2/MiniZincIDE-2.3.2-bundle-linux-x86_64.tgz -O minizinc.tgz
            tar -xzvf minizinc.tgz
            rm minizinc.tgz

      - name: Maven Release
        uses: qcastel/github-actions-maven-release@master
        env:
          JAVA_HOME: /usr/lib/jvm/java-16-openjdk/
        with:
          git-release-bot-name: "release-bot"
          git-release-bot-email: "release-bot@example.com"
          release-branch-name: "release"

          maven-args: "-Dmaven.javadoc.skip=true -DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip -Dmaven.deploy.skip=true"
          maven-options: "-DbranchName=release"
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Capture release version
        id: release-version
        run: echo "::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      - name: Release Binaries
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.release-version.outputs.version }}"
          prerelease: false
          files: |
            target/scheduler-*-jar-with-dependencies.jar